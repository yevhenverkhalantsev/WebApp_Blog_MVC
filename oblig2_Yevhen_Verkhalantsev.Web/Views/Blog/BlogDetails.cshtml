@using oblig2_Yevhen_Verkhalantsev.Web.Models.Blog
@using oblig2_Yevhen_Verkhalantsev.Database
@model BlogDetailsHttpGetViewModel

<div class="container">
    <div class="card">
        <div class="card-header">
            <h5 class="card-title" style="color: black">
                @if (Model.IsError)
                {
                    @Model.ErrorMessage
                }
                else
                {
                    @Model.Blog.Title
                }
                
                <input type="button" class="btn btn-outline-dark" value="add post" style="" id="create-new-post-button" data-bs-target="#create-new-post-modal" data-bs-toggle="modal"/>
                <div class="modal fade" id="create-new-post-modal" tabindex="-1" >
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">Create new post</div>
                            <div class="modal-body bg-secondary rounded h-100 p-4">
                                    
                                <div class="mb-3">
                                    <label class="form-label">Title</label>
                                    <input type="text" class="form-control" id="post-title">
                                </div>
                                
                                <div class="mb-3">
                                    <label class="form-label">Content</label>
                                    <input type="text" class="form-control" id="post-content">
                                </div>
                                
                            </div>
                            <div class="modal-footer">
                                <button id="btnCreate" type="button" style="margin-bottom: 10px" class="btn btn-primary">Create</button>
                                                                            
                                <div id="create-success-label" class="alert alert-success d-none">
                                    Created successfully!
                                </div>
                                <div id="create-error-label" class="alert alert-danger d-none">
                                    Error on created!
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </h5>
        </div>
    </div>
    <br/>
    @if (Model.IsError == false)
    {
        @foreach (PostEntity postEntity in Model.Blog.Posts)
        {
            <div id="post-container-@postEntity.Id">
                <div class="card">
                    <div class="card-header">
                        <div class="row">
                            <h5 class="col-md" style="color: black">
                                @postEntity.Title
                            </h5>
                            <label>
                                @postEntity.CreatedAt.ToString("dd.MM.yyyy HH:mm")
                            </label>
                        </div>

                    </div>
                    <div class="card-body">
                        <p>
                            @postEntity.Content
                        </p>
                    </div>
                    <div class="card-footer">
                        <input type="button" class="btn btn-danger" value="Delete" id="remove-post-@postEntity.Id"/>
                        <input type="button" class="btn btn-warning" value="Edit" id="edit-post-@postEntity.Id" data-bs-target="#edit-post-modal" data-bs-toggle="modal" onclick="getPostById(@postEntity.Id)"/>
                    </div>
                </div>
                <br />
            </div>
        }
        <div class="modal fade" id="edit-post-modal" tabindex="-1" >
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header" id="edit-post-modal-header">Edit post: </div>
                    <div class="modal-body bg-secondary rounded h-100 p-4">
                                    
                        <div class="mb-3">
                            <label class="form-label">Title</label>
                            <input type="text" class="form-control" id="edit-post-title">
                        </div>
                                
                        <div class="mb-3">
                            <label class="form-label">Content</label>
                            <input type="text" class="form-control" id="edit-post-content">
                        </div>
                                
                    </div>
                    <div class="modal-footer">
                        <button id="btn-save" type="button" style="margin-bottom: 10px" class="btn btn-primary" onclick="savePostData()">Save</button>
                                                                            
                        <div id="edit-success-label" class="alert alert-success d-none">
                            Updated successfully!
                        </div>
                        <div id="edit-error-label" class="alert alert-danger d-none">
                            Error on updated!
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts
{
    <script>
    let removeButtons = document.querySelectorAll('[id^="remove-post-"]');
    removeButtons.forEach(btn=>{
        btn.addEventListener('click',()=>{
            let buttonIdParts = btn.id.split('-');
            let postId = buttonIdParts[buttonIdParts.length - 1];
            let data = {
                Id: postId
            }
            
            let JSONData = JSON.stringify(data);
            $.ajax({
                url: "@Url.Action("Delete", "Post")",
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                data: JSONData,
                dataType: 'json',
                success: (response) =>{
                    document.getElementById('post-container-'+postId).remove();
                },
                error: (response) =>{
                    alert("Error")
                }
            })
        })
    })
    
    $("#btnCreate").on('click', ()=>{
                let data = {
                    Title: $("#post-title").val(),
                    Content: $("#post-content").val(),
                    BlogId: Number(@Model.Blog.Id)
                }
                
                let jsonData = JSON.stringify(data)
                
                $("#create-success-label").addClass("d-none")
                $("#create-error-label").addClass("d-none")
                
                $.ajax({
                    url:'@Url.Action("Create", "Post")', 
                    method: 'post',
                    data: jsonData,
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    success:(response)=>{
                        $("#create-success-label").removeClass("d-none")
                        setTimeout(()=>{
                          $("#create-success-label").addClass("d-none")  
                        }, 3000)
                        $("#post-title").val("")
                    },
                    error:(response)=>{
                        $("#create-error-label").removeClass("d-none")
                    }
                })
            })
            
            let selectedPostToEditId = -1;
            
    function getPostById(id){
        selectedPostToEditId = id;
        let data = {
            Id: id
        }
        let jsonData = JSON.stringify(data)
        $.ajax({
            url: '@Url.Action("GetById", "Post")',
            method: 'post',
            data: jsonData,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: (response)=>{
                document.getElementById("edit-post-modal-header").innerHTML = "Edit post: " + response.result.title
                $("#edit-post-title").val(response.result.title)
                $("#edit-post-content").val(response.result.content)
            },
            error: (response)=>{
                alert("Error")
            }
        })
    }
    
    function savePostData(){
        if (selectedPostToEditId != -1){
            $("#edit-success-label").addClass("d-none")
            $("#edit-error-label").addClass("d-none")
            
            let data = {
                Id: selectedPostToEditId,
                Title: $("#edit-post-title").val(),
                Content: $("#edit-post-content").val()
            }
            
            let jsonData = JSON.stringify(data)
           
            $.ajax({
                url: '@Url.Action("Update", "Post")',
                method: 'post',
                data: jsonData,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: (response)=>{
                    $("#edit-success-label").removeClass("d-none")
                    setTimeout(()=>{
                        $("#edit-success-label").addClass("d-none")
                    }, 3000)
                },
                error: (response)=>{
                    $("#edit-error-label").removeClass("d-none")
                }
            })
        }
    }
    </script>
}
